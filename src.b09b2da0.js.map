{"version":3,"sources":["js/stopwatch/stopwatch-refs.js","js/stopwatch/stopwatch-class.js","js/stopwatch/stopwatch.js","js/calculator/data.js","js/calculator/secondary-func.js","js/calculator/onClick-func.js","js/calculator/onKeydown-func.js","js/calculator/calculator.js","js/to-do/toDo.js","index.js"],"names":["btnStart","document","querySelector","btnStop","btnReset","clockface","Timer","constructor","refs","onTick","timerId","isActive","getTimeComponent","start","startTime","Date","setInterval","currentTime","deltaTime","renderClockface","stop","clearInterval","reset","console","log","time","mins","pad","Math","floor","secs","value","String","padStart","timer","updateClockface","textContent","addEventListener","bind","calculator","display","params","firstNumber","secondNumber","operator","previousKey","dataset","state","previousKeyType","result","renderResult","numberOne","numberTwo","onClickButton","e","target","nodeName","key","keyValue","type","trim","Number","resetParams","onKeydown","preventDefault","window","ref","input","btn","toDoList","onInputAction","onButtonClick","addMarkup","markupItem","markup","insertAdjacentHTML"],"mappings":"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","file":"src.b09b2da0.js","sourceRoot":"../src","sourcesContent":["export default {\n  btnStart: document.querySelector('[data-action=\"start\"]'),\n  btnStop: document.querySelector('[data-action=\"stop\"]'),\n  btnReset: document.querySelector('[data-action=\"reset\"]'),\n  clockface: document.querySelector('[data-action=\"clockface\"]'),\n};\n","export default class Timer {\n  constructor({ refs, onTick }) {\n    this.timerId = null;\n    this.isActive = true;\n    this.refs = refs;\n    this.onTick = onTick;\n\n    this.onTick(this.getTimeComponent(0));\n  }\n\n  start() {\n    if (!this.isActive) {\n      return;\n    }\n    const startTime = new Date();\n\n    this.timerId = setInterval(() => {\n      const currentTime = new Date();\n      const deltaTime = currentTime - startTime;\n\n      this.renderClockface(deltaTime);\n    }, 10);\n\n    this.isActive = false;\n  }\n\n  stop() {\n    if (this.isActive) {\n      return;\n    }\n    clearInterval(this.timerId);\n    this.isActive = true;\n  }\n\n  reset() {\n    this.stop();\n    this.renderClockface(0);\n    console.log(this.isActive);\n  }\n\n  getTimeComponent(time) {\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { mins, secs };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  renderClockface(value) {\n    const time = this.getTimeComponent(value);\n    this.onTick(time);\n  }\n}\n","import refs from './stopwatch-refs';\nimport Timer from './stopwatch-class';\n\nconst timer = new Timer({\n  refs: refs,\n  onTick: updateClockface,\n});\n\nrefs.btnStart.addEventListener('click', timer.start.bind(timer));\nrefs.btnStop.addEventListener('click', timer.stop.bind(timer));\nrefs.btnReset.addEventListener('click', timer.reset.bind(timer));\n\nfunction updateClockface({ mins, secs }) {\n  refs.clockface.textContent = `${mins}:${secs}`;\n}\n","const refs = {\n  calculator: document.querySelector('.container-calc'),\n  display: document.querySelector('[data-action=\"output\"]'),\n};\n\nconst params = {\n  firstNumber: '',\n  secondNumber: '',\n  operator: '',\n  previousKey: {\n    dataset: {\n      state: '',\n    },\n  },\n  previousKeyType: '',\n  result: '',\n};\n\nexport { refs, params };\n","export default function renderResult(operator, numberOne, numberTwo) {\n  let result;\n  if (operator === '+') result = numberOne + numberTwo;\n  if (operator === '-') result = numberOne - numberTwo;\n  if (operator === '*') result = numberOne * numberTwo;\n  if (operator === '/') result = numberOne / numberTwo;\n  if (operator === '') result = 0;\n\n  return result;\n}\n","import { refs, params } from './data';\nimport renderResult from './secondary-func';\n\nconst { display } = refs;\nlet { firstNumber, secondNumber, operator, previousKey, previousKeyType, result } = params;\n\nexport default function onClickButton(e) {\n  if (e.target.nodeName !== 'BUTTON') return;\n\n  const key = e.target;\n  const keyValue = key.textContent;\n  const { type } = key.dataset;\n\n  if (type !== 'equal' && type !== 'reset') key.dataset.state = 'selected';\n\n  if (type === 'number' && previousKeyType !== 'operator') {\n    firstNumber += keyValue;\n    display.textContent = firstNumber;\n\n    previousKey.dataset.state = '';\n  }\n\n  if (type === 'operator' && secondNumber === '') {\n    operator = keyValue.trim();\n\n    display.textContent = operator;\n\n    previousKeyType = 'operator';\n    previousKey.dataset.state = '';\n  }\n\n  if (previousKeyType === 'operator' && type === 'number') {\n    secondNumber += keyValue;\n\n    display.textContent = secondNumber;\n    previousKey.dataset.state = '';\n  }\n\n  if (type === 'operator' && secondNumber !== '') {\n    firstNumber = Number(firstNumber);\n    secondNumber = Number(secondNumber);\n\n    result = renderResult(operator, firstNumber, secondNumber);\n    display.textContent = result;\n\n    firstNumber = result;\n    secondNumber = '';\n    operator = keyValue.trim();\n\n    previousKey.dataset.state = '';\n  }\n\n  if (type === 'equal') {\n    firstNumber = Number(firstNumber);\n    secondNumber = Number(secondNumber);\n\n    result = renderResult(operator, firstNumber, secondNumber);\n    display.textContent = result;\n\n    previousKey.dataset.state = '';\n    resetParams();\n  }\n\n  if (type === 'reset') {\n    display.textContent = '0';\n\n    previousKey.dataset.state = '';\n    resetParams();\n  }\n\n  previousKey = key;\n}\n\nfunction resetParams() {\n  firstNumber = '';\n  secondNumber = '';\n  operator = '';\n  previousKeyType = '';\n  result = '';\n}\n","import { refs, params } from './data';\nimport renderResult from './secondary-func';\n\nconst { display } = refs;\nlet { firstNumber, secondNumber, operator, previousKey, previousKeyType, result } = params;\n\nexport default function onKeydown(e) {\n  const key = e.key;\n  if (key === 'Alt' || key === 'CapsLock' || key === 'Control' || key === 'Shift') return;\n\n  let type = null;\n\n  if (\n    key === '1' ||\n    key === '2' ||\n    key === '3' ||\n    key === '4' ||\n    key === '5' ||\n    key === '6' ||\n    key === '7' ||\n    key === '8' ||\n    key === '9' ||\n    key === '0'\n  )\n    type = 'number';\n\n  if (key === '+' || key === '-' || key === '*' || key === '/') type = 'operator';\n\n  if (key === 'Enter') type = 'equal';\n  if (key === 'Delete' || key === 'Escape') type = 'reset';\n\n  if (type === 'number' && previousKeyType !== 'operator') {\n    firstNumber += key;\n    display.textContent = firstNumber;\n  }\n\n  if (type === 'operator' && secondNumber === '') {\n    operator = key.trim();\n\n    display.textContent = operator;\n\n    previousKeyType = 'operator';\n  }\n\n  if (previousKeyType === 'operator' && type === 'number') {\n    secondNumber += key;\n\n    display.textContent = secondNumber;\n  }\n\n  if (type === 'operator' && secondNumber !== '') {\n    firstNumber = Number(firstNumber);\n    secondNumber = Number(secondNumber);\n\n    result = renderResult(operator, firstNumber, secondNumber);\n    display.textContent = result;\n\n    firstNumber = result;\n    secondNumber = '';\n    operator = key.trim();\n  }\n\n  if (type === 'equal') {\n    e.preventDefault();\n\n    firstNumber = Number(firstNumber);\n    secondNumber = Number(secondNumber);\n\n    result = renderResult(operator, firstNumber, secondNumber);\n    display.textContent = result;\n\n    resetParams();\n  }\n\n  if (type === 'reset') {\n    display.textContent = '0';\n\n    resetParams();\n  }\n}\n\nfunction resetParams() {\n  firstNumber = '';\n  secondNumber = '';\n  operator = '';\n  previousKeyType = '';\n  result = '';\n}\n","import { refs } from './data';\nimport onClickButton from './onClick-func';\nimport onKeydown from './onKeydown-func';\n\nconst { calculator } = refs;\n\ncalculator.addEventListener('click', onClickButton);\nwindow.addEventListener('keydown', onKeydown);\n","const ref = {\n  input: document.querySelector('.js-input'),\n  btn: document.querySelector('.js-btn'),\n  toDoList: document.querySelector('.js-list'),\n};\n\nconst { input, btn, toDoList } = ref;\n\ninput.addEventListener('input', onInputAction);\nbtn.addEventListener('click', onButtonClick);\n\nfunction onInputAction(e) {\n  input.dataset.value = '';\n  input.dataset.value += e.target.value;\n  // const inputValue = input.dataset.value;\n  // console.log(inputValue);\n  // console.log(input.dataset.value);\n}\n\nfunction onButtonClick(e) {\n  const taskValue = input.dataset.value;\n  const markup = markupItem(taskValue);\n  addMarkup(markup);\n\n  input.value = '';\n}\n\nfunction markupItem(value) {\n  return `<li class=\"toDo__item\">\n            <label class=\"check\">\n              <input type=\"checkbox\" class=\"check__input\" />\n              <span class=\"checkbox\"></span>\n              ${value}\n            </label>\n          </li>`;\n}\n\nfunction addMarkup(markup) {\n  toDoList.insertAdjacentHTML('beforeend', markup);\n}\n","import './sass/main.scss';\nimport './js/stopwatch/stopwatch';\nimport './js/calculator/calculator';\nimport './js/to-do/toDo';\n"]}